//
// server.cfg
//
// comments are written with "//" in front of them.

// NOTE: More parameters and details are available at http://community.bistudio.com/wiki/server.cfg

//======================================================= STEAM PORTS (not needed anymore, it is +1 +2 to gameport)

// steamPort		= 8766;		// default  8766, needs to be unique if multiple servers are on the same box
// steamQueryPort	= 27016;	// default 27016, needs to be unique if multiple servers are on the same box

//======================================================= GENERAL SETTINGS

hostname						= "Invade and Annex: Republic's Wrath";		// Name of the server displayed in the public server list
password						= "ExamplePassword";						// Password required to join the server (remove // at start of line to enable)
passwordAdmin					= "ExampleAdminPassword";					// Password to login as admin. Open the chat and type: #login password
maxPlayers						= 64;										// Maximum amount of players, including headless clients. Anybody who joins the server is considered a player, regardless of their role or team.
persistent						= 1;										// If set to 1, missions will continue to run after all players have disconnected; required if you want to use the -autoInit startup parameter
statisticsEnabled				= 1;                     					// BIS Analytics
callExtReportLimit				= 1000.0;									// If server initiated callExtension takes longer than specified limit in milliseconds, the warning will be logged into server .rpt file as well as reflected in the extension return result. Default: 1000.0
skipLobby						= FALSE;									// If true, joining player will skip role assignment lobby menu.
upnp							= 1;										// upnp

//======================================================= CLIENT STABILITY + ADMINISTRATION

kickTimeout[] = {														// Kick type, plus duration of kick until they can return (like temporary ban for X seconds). Format:   {<kick type> , <duration in seconds>}   If duration is -1, duration is mission end. If duration is -2, duration is until server restart.
	{0, 0}, 															// 0 - manual kick (vote kick, admin kick, bruteforce detection etc.)
	{1, 0}, 															// 1 - connectivity kick (ping, timeout, packetloss, desync)
	{2, 0}, 															// 2 - BattlEye kick
	{3, 0} 																// 3 - harmless kick (wrong addons, steam timeout or checks, signatures, content etc.)
};
kickClientsOnSlowNetwork[] = {0,0,0,0};									// Defines if {<MaxPing>, <MaxPacketLoss>, <MaxDesync>, <DisconnectTimeout>} will be logged (0) or kicked (1) (since Arma 3 1.56+)
maxPing = 350;															// Max ping value until server kick the user (since Arma 3 1.56+)
maxPacketLoss = 50;														// Max packetloss value until server kick the user (since Arma 3 1.56+)
maxDesync = 150;														// Max desync value until server kick the user (since Arma 3 1.56+)
disconnectTimeout = 90;													// Server wait time before disconnecting client, default 90 seconds, range 5 to 90 seconds. (since Arma 3 1.56+)
roleTimeOut = 90;
briefingTimeOut = 60;
lobbyIdleTimeout = 300;

//======================================================= VOICE CHAT

disableVoN = 0;     													// If set to 1, voice chat will be disabled
disableChannels[]={{0,TRUE,TRUE},{1,TRUE,TRUE},{2,FALSE,FALSE},{3,FALSE,FALSE},{4,FALSE,FALSE},{5,FALSE,FALSE}};
vonCodecQuality = 10;    												// Supports range 1-30; 1-10 is 8kHz (narrowband), 11-20 is 16kHz (wideband), 21-30 is 32kHz (ultrawideband); higher = better sound quality, more bandwidth consumption
vonCodec = 1;                                                           // Experimental Opus VON codec

//======================================================= VOTING

voteMissionPlayers	= 1;												// Minimum number of players required before displaying the mission selection screen, if you have not already selected a mission in this config
voteThreshold		= 0.33;												// Percentage (0.00 to 1.00) of players needed to vote something into effect, for example an admin or a new mission. Set to 9999 to disable voting.
allowedVoteCmds[] =														// Voting commands allowed to players
{
	// {command, preinit, postinit, threshold} - specifying a threshold value will override "voteThreshold" for that command
	{"admin", false, false},											// vote admin
	{"kick", false, true, 0.51},										// vote kick
	{"missions", false, false},											// mission change
	{"mission", false, false},											// mission selection
	{"restart", false, false},											// mission restart
	{"reassign", false, false}											// mission restart with roles unassigned
};

//======================================================= WELCOME MESSAGE ("message of the day")

// It can be several lines, separated by comma
// Empty messages "" will not be displayed, but can be used to increase the delay before other messages
motd[] =
{
	"",
	"",
	"",
	"",
	"",
	"Welcome to Invade and Annex! :D",
	"Please remember to read the rules and have fun."
};
motdInterval = 5;															// Number of seconds between each message

//======================================================= MISSION

autoSelectMission = TRUE;
randomMissionOrder = FALSE;
forcedDifficulty = "Custom";
class Missions {
	class apex_framework {
		template = "Star_Wars_Framework_Version135_Test005.Altis";			// Custom Mission
		//template = "Star_Wars_Framework_Version120_BaseBackup.Altis";		// Base Backup
		//template = "";

		difficulty = "Custom";
	};
};

missionWhitelist[] = {
	"Star_Wars_Framework_Version135_Test005.Altis",
	""
};

//======================================================= LOGGING

timeStampFormat	= "short";								// Timestamp format used in the server RPT logs. Possible values are "none" (default), "short", "full"
logFile			= "server_console.log";					// Server console output filename

//======================================================= SECURITY

BattlEye			= 0;								// If set to 1, BattlEye Anti-Cheat will be enabled on the server (default: 1, recommended: 1)
verifySignatures		= 0;							// If set to 2, players with unknown or unsigned mods won't be allowed join (default: 0, recommended: 2)
kickDuplicate			= 1;							// If set to 1, players with an ID that is identical to another player will be kicked (recommended: 1)
allowedFilePatching		= 1;							// Prevents clients with filePatching enabled from joining the server
														// (0 = block filePatching, 1 = allow headless clients, 2 = allow all) (default: 0, recommended: 1)
serverCommandPassword = "ExampleServerPassword";		// Password required by server to execute commands

//======================================================= FILE EXTENSIONS

// only allow files with those extensions to be loaded via loadFile command (since Arma 3 v1.20)
allowedLoadFileExtensions[] =		{"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"};

// only allow files with those extensions to be loaded via preprocessFile / preprocessFileLineNumbers commands (since Arma 3 v1.20)
allowedPreprocessFileExtensions[] =	{"hpp","sqs","sqf","fsm","cpp","paa","txt","xml","inc","ext","sqm","ods","fxy","lip","csv","kb","bik","bikb","html","htm","biedi"};

// only allow files and URLs with those extensions to be loaded via htmlLoad command (since Arma 3 v1.28)
allowedHTMLLoadExtensions[] =		{"htm","html","php","xml","txt"};

//======================================================= EVENT SCRIPTS - see http://community.bistudio.com/wiki/ArmA:_Server_Side_Scripting

onUserConnected		= "";				// command to run when a player connects
onUserDisconnected	= "";				// command to run when a player disconnects
doubleIdDetected	= "";				// command to run if a player has the same ID as another player in the server
onUnsignedData		= "kick (_this select 0)";	// command to run if a player has unsigned files
onHackedData		= "kick (_this select 0)";	// command to run if a player has tampered files

//======================================================= HEADLESS CLIENT

headlessClients[]	= {"127.0.0.1"};		// list of IP addresses allowed to connect using headless clients; example: {"127.0.0.1", "192.168.1.100"};
localClient[]		= {"127.0.0.1"};		// list of IP addresses to which are granted unlimited bandwidth;  example: {"127.0.0.1", "192.168.1.100"};